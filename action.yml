name: 'OBS Studio development environment'
description: 'Extracts development environment for OBS Studio plugins.'
inputs:
  arch:
    description: 'Architecture, x86_64 or arm64 (macOS only).'
    required: false
    default: 'x86_64'
    type: string
  obs:
    description: 'Version of OBS Studio'
    required: true
    type: string
  path:
    description: 'Location to extract (macOS and Linux only).'
    default: '/tmp/obs-deps'
    required: false
    type: string
  qt:
    description: 'Prepare Qt library'
    required: false
    default: true
    type: boolean
  ubuntu:
    description: 'Ubuntu version (Linux only). If not specified, automatically selected.'
    default: ''
    required: false
    type: string
  verbose:
    description: 'Enable printing command lines.'
    required: false
    default: false
    type: boolean
outputs:
  OBS_QT_VERSION_MAJOR:
    description: "QT major version required by OBS"
    value: ${{ steps.download.outputs.OBS_QT_VERSION_MAJOR }}
  MACOSX_DEPLOYMENT_TARGET:
    description: "Deployment target version for macOS"
    value: ${{ steps.macOS.outputs.MACOSX_DEPLOYMENT_TARGET }}
runs:
  using: 'composite'
  steps:
    - name: Download
      id: download
      shell: bash
      run: |
        if test ${{ inputs.verbose }} != false; then
          bash=(bash -x)
        else
          bash=(bash)
        fi
        if test ${{ inputs.qt }} != false; then
          flg_qt=--qt
        else
          flg_qt=--no-qt
        fi
        case "${{ runner.os }}" in
          Linux)
            script=scripts/linux-download.sh
            script_opts=(-a -o "${{ inputs.obs }}" -u "${{ inputs.ubuntu }}" $flg_qt)
            ;;
          macOS)
            script=scripts/macos-download.sh
            script_opts=(-a "${{ inputs.arch }}" -o "${{ inputs.obs }}" -d "${{ inputs.path }}" $flg_qt)
            ;;
          Windows)
            script=scripts/windows-download.sh
            script_opts=($flg_qt)
            ;;
          *)
            echo "Error: unknown OS ${{ runner.os }}"
            exit 1
        esac
        "${bash[@]}" '${{ github.action_path }}'/"$script" -o "${{ inputs.obs }}" "${script_opts[@]}"
